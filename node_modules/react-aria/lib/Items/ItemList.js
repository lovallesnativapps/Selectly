'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _a11yFocusScope = require('a11y-focus-scope');

var _scrollIntoView = require('scroll-into-view');

var _scrollIntoView2 = _interopRequireDefault(_scrollIntoView);

var _FocusGroup = require('../utils/FocusGroup');

var _FocusGroup2 = _interopRequireDefault(_FocusGroup);

var _specialAssign = require('../utils/special-assign');

var _specialAssign2 = _interopRequireDefault(_specialAssign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var checkedProps = {
  component: _react.PropTypes.any,
  rootNode: _react.PropTypes.any,
  scopeFocus: _react.PropTypes.bool,
  initialFocus: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.bool]),
  onItemFocus: _react.PropTypes.func,
  onItemSelection: _react.PropTypes.func,
  children: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.node])
};
var noop = function noop() {
  return null;
};

var ItemList = function (_Component) {
  _inherits(ItemList, _Component);

  function ItemList() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ItemList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ItemList.__proto__ || Object.getPrototypeOf(ItemList)).call.apply(_ref, [this].concat(args))), _this), _this._focusGroup = new _FocusGroup2.default(), _this._handleFocus = function (member, index) {
      (0, _scrollIntoView2.default)(member.node, { time: 0, align: { top: 1 } });
      _this.props.onItemFocus(member, index);
    }, _this._handleSelect = function (member, event) {
      _this.props.onItemSelection(member, event);
    }, _this.focusMember = function (index) {
      _this._focusGroup.focus(index);
    }, _this.getActiveMember = function () {
      return _this._focusGroup.getActiveMember();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ItemList, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        itemList: {
          focusGroup: this._focusGroup,
          focusItem: this.focusItem,
          onItemSelection: this.props.onItemSelection
        }
      };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._focusGroup.on('focus', this._handleFocus);
      this._focusGroup.on('select', this._handleSelect);

      if (this.props.rootNode) {
        this._focusGroup.setRootNode(this.props.rootNode);
      }

      if (this.props.scopeFocus) {
        (0, _a11yFocusScope.scopeFocus)((0, _reactDom.findDOMNode)(this));
      }

      if (this.props.initialFocus !== false) {
        this._focusGroup.focus(this.props.initialFocus);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._focusGroup.off('focus', this._handleFocus);
      this._focusGroup.off('select', this._handleSelect);

      if (this.props.scopeFocus) {
        (0, _a11yFocusScope.unscopeFocus)();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          component = _props.component,
          children = _props.children;

      var props = (0, _specialAssign2.default)({}, this.props, checkedProps);
      return component ? (0, _react.createElement)(component, props, children) : children;
    }
  }]);

  return ItemList;
}(_react.Component);

ItemList.childContextTypes = {
  itemList: _react.PropTypes.object
};
ItemList.propTypes = checkedProps;
ItemList.defaultProps = {
  component: 'div',
  initialFocus: 0,
  onItemFocus: noop,
  onItemSelection: noop
};
exports.default = ItemList;
module.exports = exports['default'];