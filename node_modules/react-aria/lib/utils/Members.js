'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _mitt = require('mitt');

var _mitt2 = _interopRequireDefault(_mitt);

var _FocusGroup = require('./FocusGroup');

var _FocusGroup2 = _interopRequireDefault(_FocusGroup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Members = function () {
  function Members() {
    var _this = this;

    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Members);

    this.setRootNode = function (node) {
      _this._focusGroup.setRootNode(node);
    };

    this.add = function (member) {
      var index = member.index;
      var node = member.node;
      var text = member.text;


      if (index !== null && index !== undefined) {
        _this._collection.splice(index, 0, member);
      } else {
        _this._collection.push(member);
      }

      // add member to focus group
      _this._focusGroup.addMember(_extends({}, member, {
        text: text || node.innerHTML
      }));

      // activate focus group if this was the first member added
      if (_this._collection.length === 1) {
        _this._focusGroup.activate();
      }

      if (typeof _this._options.onAdd === 'function') {
        _this._options.onAdd(member);
      }
    };

    this.remove = function (member) {
      var pos = _this._collection.indexOf(member);

      if (pos > -1) {
        _this._collection.splice(member, 1);
        _this._focusGroup.removeMember(member.node);
      }

      // deactivate focus group if this was the last member removed
      if (_this._collection.length <= 0) {
        _this._focusGroup.deactivate();
      }

      if (typeof _this._options.onRemove === 'function') {
        _this._options.onRemove(member);
      }
    };

    this.focus = function (index) {
      _this._focusGroup.focus(index);
    };

    var emitter = (0, _mitt2.default)();

    this.on = emitter.on;
    this.emit = emitter.emit;
    this.off = emitter.off;

    this._collection = [];
    this._options = options;
    this._focusGroup = new _FocusGroup2.default({
      onFocus: function onFocus(member, index) {
        return _this.emit('focus', member, index);
      },
      onSelect: function onSelect(member, event) {
        return _this.emit('select', member, event);
      }
    });
  }

  _createClass(Members, [{
    key: 'getCollection',
    value: function getCollection() {
      return this._collection;
    }
  }]);

  return Members;
}();

exports.default = Members;
module.exports = exports['default'];